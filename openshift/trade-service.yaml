apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: sla-solution
  
parameters:
- description: Git Source Repository
  name: SOURCE_REPOSITORY
  value: https://github.com/alainpham/jboss-middleware-empowered.git
  required: true
- description: Git Source reference
  name: SOURCE_REF
  value: master
  required: true
- description: FIS image stream namespace
  name: IMAGE_STREAM_NAMESPACE
  value: 
  required: false
- description: Maven build command
  name: MAVEN_ARGS
  value: -DMVN_MIRROR=http://172.17.0.1:8081/nexus/content/groups/public/ -gs settings.xml install -DskipTests -e
  required: true
objects:
- apiVersion: v1 ############Build for trade-service###################
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: trade-service:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_ARGS
          value: ${MAVEN_ARGS}
        - name: MAVEN_OPTS
          value: -Xmx1024m
        - name: MAVEN_ARGS_APPEND
          value: 
        - name: ARTIFACT_DIR
          value: trade-service/target/
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status: {}
  
- apiVersion: v1 #deploy for trade-service
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: trade-service
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: trade-service
          solution: sla-solution
          deploymentconfig: trade-service
      spec:
        containers:
        -  name: trade-service
           image: trade-service
           imagePullPolicy: Always
           volumeMounts:
           - name: config-volume
             mountPath: /deployments/etc
           ports:
           - containerPort: 8778
             name: jolokia
             protocol: TCP
           - containerPort: 7124
             name: rest-svc
             protocol: TCP
           resources: {}
        volumes:
        - name: config-volume
          configMap:
            name: sla-solution-config
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "trade-service"
        from:
          kind: ImageStreamTag
          name: trade-service:latest
  status: {}
  
- apiVersion: v1 #ImageStream for trade-service
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: trade-service:latest
      generation: null
      importPolicy: {}
      name: latest
  status: {}
  
- apiVersion: v1 #Service for trade-service
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    ports:
    - name: jolokia-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    - name: rest-svc-tcp
      port: 7124
      protocol: TCP
      targetPort: 7124
    selector:
      deploymentconfig: trade-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
