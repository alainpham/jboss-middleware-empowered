apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: sla-solution
  
parameters:
- description: Git Source Repository
  name: SOURCE_REPOSITORY
  value: https://github.com/alainpham/jboss-middleware-empowered.git
  required: true
- description: Git Source reference
  name: SOURCE_REF
  value: master
  required: true
- description: FIS image stream namespace
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
  required: true
  
objects:

#Build for event-collector
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: event-collector
      solution: sla-solution
    name: event-collector
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: event-collector:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_OPTS
          value: -Xmx1024m
        - name: MAVEN_ARGS_APPEND
          value: -pl event-collector --also-make
        - name: ARTIFACT_DIR
          value: event-collector/target/
        - name: MODULE_DIR
          value: event-collector
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status: {}

#Build for trade-service
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: trade-service:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_OPTS
          value: -Xmx1024m
        - name: MAVEN_ARGS_APPEND
          value: -pl trade-service --also-make
        - name: ARTIFACT_DIR
          value: trade-service/target/
        - name: MODULE_DIR
          value: trade-service
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status: {}

#Build for dashboard
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: dashboard
      solution: sla-solution
    name: dashboard
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: dashboard:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${SOURCE_REF}
        uri: ${SOURCE_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_OPTS
          value: -Xmx1024m
        - name: MAVEN_ARGS_APPEND
          value: -pl dashboard --also-make
        - name: ARTIFACT_DIR
          value: dashboard/target/
        - name: MODULE_DIR
          value: dashboard
        from:
          kind: ImageStreamTag
          name: fis-java-openshift:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
  status: {}
 
#deploy for event-collector
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: event-collector
      solution: sla-solution
    name: event-collector
  spec:
    replicas: 1
    selector:
      deploymentconfig: event-collector
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: event-collector
          solution: sla-solution
          deploymentconfig: event-collector
      spec:
        containers:
          image: event-collector
          imagePullPolicy: Always
          name: event-collector
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 7123
            name: rest-svc
            protocol: TCP
          - containerPort: 61616
            name: amq-svc
            protocol: TCP
          resources: {}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - event-collector
        from:
          kind: ImageStreamTag
          name: event-collector:latest
      type: ImageChange
    - type: ConfigChange
  status: {}

#deploy for trade-service
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: trade-service
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: trade-service
          solution: sla-solution
          deploymentconfig: trade-service
      spec:
        containers:
          image: trade-service
          imagePullPolicy: Always
          name: trade-service
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 7124
            name: rest-svc
            protocol: TCP
          resources: {}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - trade-service
        from:
          kind: ImageStreamTag
          name: trade-service:latest
      type: ImageChange
    - type: ConfigChange
  status: {}
  
#deploy for dashboard
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: dashboard
      solution: sla-solution
    name: dashboard
  spec:
    replicas: 1
    selector:
      deploymentconfig: dashboard
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: dashboard
          solution: sla-solution
          deploymentconfig: dashboard
      spec:
        containers:
          image: dashboard
          imagePullPolicy: Always
          name: dashboard
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8888
            name: http
            protocol: TCP
          resources: {}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - trade-service
        from:
          kind: ImageStreamTag
          name: dashboard:latest
      type: ImageChange
    - type: ConfigChange
  status: {}
  
  
#ImageStream for event-collector
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: event-collector
      solution: sla-solution
    name: event-collector
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: event-collector:latest
      generation: null
      importPolicy: {}
      name: latest
  status: {}

#ImageStream for trade-service
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: trade-service:latest
      generation: null
      importPolicy: {}
      name: latest
  status: {}

#ImageStream for dashboard
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: dashboard
      solution: sla-solution
    name: dashboard
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: dashboard:latest
      generation: null
      importPolicy: {}
      name: latest
  status: {}

#Service for event-collector
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: event-collector
      solution: sla-solution
    name: event-collector
  spec:
    ports:
    - name: jolokia-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    - name: rest-svc-tcp
      port: 7123
      protocol: TCP
      targetPort: 7123
    - name: amq-svc-tcp
      port: 61616
      protocol: TCP
      targetPort: 61616
    selector:
      deploymentconfig: event-collector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

#Service for trade-service
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: trade-service
      solution: sla-solution
    name: trade-service
  spec:
    ports:
    - name: jolokia-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    - name: rest-svc-tcp
      port: 7124
      protocol: TCP
      targetPort: 7124
    selector:
      deploymentconfig: trade-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

#Service for dashboard
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: dashboard
      solution: sla-solution
    name: dashboard
  spec:
    ports:
    - name: jolokia-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    - name: http-tcp
      port: 8888
      protocol: TCP
      targetPort: 8888
    selector:
      deploymentconfig: dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

#Route for dashboard
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: dashboard
      solution: sla-solution
    name: dashboard
  spec:
    to:
      kind: Service
      name: dashboard
    port:
      targetPort: http-tcp
  status: {}

